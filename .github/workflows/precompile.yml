name: Precompile NIFs

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build_release:
    name: NIF ${{ matrix.nif }} - ${{ matrix.job.target }} (${{ matrix.job.os }})
    runs-on: ${{ matrix.job.os }}
    strategy:
      fail-fast: false
      matrix:
        nif: ["2.15", "2.16", "2.17"]
        job:
          - { target: aarch64-apple-darwin, os: macos-14 }
          - { target: aarch64-unknown-linux-gnu, os: ubuntu-22.04, use-cross: true }
          - { target: aarch64-unknown-linux-musl, os: ubuntu-22.04, use-cross: true }
          - { target: x86_64-apple-darwin, os: macos-12 }
          - { target: x86_64-pc-windows-gnu, os: windows-2022 }
          - { target: x86_64-pc-windows-msvc, os: windows-2022 }
          - { target: x86_64-unknown-linux-gnu, os: ubuntu-22.04 }
          - { target: x86_64-unknown-linux-musl, os: ubuntu-22.04, use-cross: true }

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Extract project version
        shell: bash
        run: |
          # Get the version from mix.exs
          echo "PROJECT_VERSION=$(grep -o '@version "[^"]*"' mix.exs | grep -o '"[^"]*"' | tr -d '"')" >> $GITHUB_ENV

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          target: ${{ matrix.job.target }}

      - name: Install Erlang and Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: 26.2
          elixir-version: 1.16.1

      - name: Install cross
        if: ${{ matrix.job.use-cross }}
        uses: taiki-e/install-action@v2
        with:
          tool: cross

      - name: Build the project
        id: build-crate
        uses: philss/rustler-precompiled-action@v1.1.4
        with:
          project-name: ex_iceberg_nif
          project-version: ${{ env.PROJECT_VERSION }}
          target: ${{ matrix.job.target }}
          nif-version: ${{ matrix.nif }}
          use-cross: ${{ matrix.job.use-cross }}
          cargo-args: --features rustler_precompiled

      - name: Artifact upload
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.build-crate.outputs.file-name }}
          path: ${{ steps.build-crate.outputs.file-path }}

      - name: Publish archives and packages
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ steps.build-crate.outputs.file-path }}
        if: startsWith(github.ref, 'refs/tags/')
